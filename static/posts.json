{
    "posts": [
        {
            "id": "tether1",
            "title": "Humble Beginnings",
            "date": "Feb 1, 2018",
            "content": "### Getting started on my BDP creative project\nNow that I have finally officially got my BDP project approved I am getting started on my project 'TETHER'. Well, what is Tether? (name probably wont stick forever, but thats what the products development name will continue to be) Tether is aiming to be the first social platform for writers, giving creative writers a place to practice and interact with others in their field. The premise is based on community story telling, certainly not a new idea it is something we do as kids, when we participate in while in writing courses, or even when we play games like D&D. But how can we manage to bring this idea into the modern age, to close the distance required for people to participate in this kind of interactive experience? With Tether users will be able to create 'story nodes' which are basically bite-sized pieces of a story (probably something from 500-800 characters) then peers are able to create 'branches' off of their node and add onto the story. Users can branch off of any node as many times as they want allowing for endless possibilities for these stories. There's alot to that, so I want to talk about some of the technical details and the roadmap I have ahead of me.\n#### Technical Roadmap\nFor this project I am going to be building a node.js backend using express with MongoDB for persistence (and the mongoose library for interfacing with JS). This is the first road block to tackle and I have already started on it [(**TetherApi**)](https://github.com/Jaredk3nt/tetherApi). I chose these due to my familiarity with javascript, and familiarity with JSON rather than using SQL datastores. Currently I am almost done with a initial version of the API, it needs some more tweaking and testing (and unit testing), but as soon as that is done I will begin on what will be the larger portion of the project, the frontend. The basic idea for the site is simple enough. Modeling trees in the code and storing them in the database was quite simple, however displaying such information to a user will be much more difficult. I will be using a framework called VueJS which I have prior experience with (such as creating this website) to speed up the process of creating the frontend, however everything else I intend to do myself. Since my BDP certificate is in digital art (and my passion lies there as well) I take alot of pride in my ability to design interfaces from scratch. I will be creating a CSS framework as well as a toolset of modular Vue components for Tether to help in streamlining the overall build process by front loading a bit more work at the start. I really want the site to be designed well from the start using a proper atomic structure. That is that every part of the website is build from very small components called 'atoms', that make up bigger components called 'molecules' and so on until the whole site is complete. This will make it easier to make changes to the site, which will be very important to me as I am intending to do user research on the interfaces. Getting early versions into peoples hands will help me to eliminate my own biases and root out core problems early on in the development. I have already been working on mockups and getting feedback on them and hope that this will make my early prototypes go much smoother.\n### Conclusion\nI have a simple road-map that I can make more granular as I approach each phase. My current goal is to have the API hosted and running in the next week or two so that I can have a good base with which to test the frontend. I do have much less experience in creating API's so I am giving myself a little bit of leeway. However, once I start the front-end I hope to have a working prototype version up in about two weeks and have a cycle of user-testing, issue creating, and design iteration going until the end of the semester. Once I have the frontend repository up I will keeping track of issues using Github to keep me on track and focused on the most important tasks.\n **Wish me luck!**"
        },
        {
            "id": "markdown",
            "title": "Testing out my new tool, MarkyJS",
            "date": "January 22, 2018",
            "content": "### My first blog post with markdown\nI finally got around to implementing my own markdown parser, so now my blogposts are fully customizable with markdown! When I was in SWE I set up this blog in a couple of hours so I cut some corners. I only had plain text that could be put into HTML tags. Since we had to have section titles I built a very strictly formatted JSON file that allowed me to have section titles and my component would go through the array of section titles and text and create an unordered list out of them, styling them the correct way. This made it extremely hard to change up the format and basically made it so the blog could never be used for anything else. So a couple of days over the winter break to make **Markyjs** a simple markdown to HTML parser. Now all I have to do is include that as a dependency and then pass the markdown styled string I have stored for the blog post to marky `marky('some markdown here')` and voila!\n\nIt was a fun little project and now I am looking forward to my very very big project this semester that I shall be starting shortly!"
        }
    ]
}